# hello_pytorch_gpu_apptainer.sub
# Submit file to access the GPU via apptainer

# SIF file is located on /staging
container_image = osdf:///chtc/staging/mfeickert/apptainer/pixi-docker-chtc.sif

# set the log, error and output files
log = hello_pytorch_gpu_apptainer.log.txt
error = hello_pytorch_gpu_apptainer.err.txt
output = hello_pytorch_gpu_apptainer.out.txt

# set the executable to run
executable = hello_pytorch_gpu_apptainer.sh
arguments = $(Process)

# transfer training data files to the compute node
transfer_input_files = MNIST_data.tar.gz

# transfer the serialized trained model back
transfer_output_files = run/mnist_cnn.pt

should_transfer_files = YES
when_to_transfer_output = ON_EXIT

# We require a machine with a modern version of the CUDA driver
requirements = (Target.CUDADriverVersion >= 12.0)
requirements = (HasCHTCStaging == true)

# We must request 1 CPU in addition to 1 GPU
request_cpus = 1
request_gpus = 1

# select some memory and disk space
request_memory = 4GB
request_disk = 10GB

# Opt in to using CHTC GPU Lab resources
+WantGPULab = true
# Specify short job type to run more GPUs in parallel
# Can also request "medium" or "long"
+GPUJobLength = "short"

# Tell HTCondor to run 1 instances of our job:
queue 1
